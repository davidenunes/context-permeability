# Context Permeability Experiment Configuration File
# id of this experiment for future reference
euid = 0

# model is being executed
model = pt.ul.labmag.context.experiments.CPModel
runner = org.bhave.experiment.run.MultiThreadedRunner

# Data Producers + Consumers + Statistics (measured during run) + Exporters

data.producers.0 = org.bhave.experiment.data.producer.InMemoryProducer
data.producers.0.stats.0 = pt.ul.labmag.context.experiments.stats.OpinionCount
data.producers.0.stats.1 = pt.ul.labmag.context.experiments.stats.OpinionDominance

data.consumers.0 = org.bhave.experiment.data.consumer.InMemoryDataConsumer
data.consumers.0.export.0 = org.bhave.experiment.dummy.StdOutDataExporter


# producer consumer mapping
data.consumers.0.producer = 0

# Posthoc Statistics
data.posthoc.stats.0 = pt.ul.labmag.context.experiments.stats.posthoc.NetworkSnapshot
data.posthoc.stats.1 = pt.ul.labmag.context.experiments.stats.posthoc.OpinionDominance
data.posthoc.stats.0.export.0 = org.bhave.experiment.dummy.StdOutDataExporter
data.posthoc.stats.1.export.0 = org.bhave.experiment.dummy.StdOutDataExporter


# experiment model parameter space
runs = 2

# Consensus required for the simulation stop
params.0.name = consensus-required
params.0.sweep = single
params.0.type = double
params.0.value = 1.0

# Maximum number of steps for the simulation to stop
params.1.name = max-steps
params.1.sweep = single
params.1.type = int
params.1.value = 100

# Number of agents in the simulation
params.2.name = num-agents
params.2.sweep = single
params.2.type = int
params.2.value = 100


# Network Configuration
params.3.name = num-networks
params.3.sweep = single
params.3.type = int
params.3.value = 1

# Network model configuration
# If the num-networks parameter is set to a value > 1
# and if you don't supply the configuration for each network
# layer, the default model will be used (network.0)
# to provide other configurations you must provide parameters
# for network.1, network.2, ... network.n

params.4.name = network.0
params.4.sweep = single
params.4.type = string
params.4.value = org.bhave.network.model.KRegularModel

# Each network can be configurable
# numNodes should be the same as num-agents
# check the network models documentation for more

# Parameter k for k-regular network
params.5.name = network.0.numNodes
params.5.sweep = single
params.5.type = int
params.5.value = 100

# Parameter k for k-regular
params.6.name = network.0.k
params.6.sweep = single
params.6.type = int
params.6.value = 10





